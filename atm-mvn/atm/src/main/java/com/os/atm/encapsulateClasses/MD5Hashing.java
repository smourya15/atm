package com.os.atm.encapsulateClasses;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

// Java program to calculate MD5Hashing hash value
public class MD5Hashing {
    private String text;
    private String hashText;

    public String getHashText() {
        return hashText;
    }

    public MD5Hashing(String text) {
        this.text = text;
        computeMd5();
    }
    
    public Connection databaseCon(){
        Connection connection= null;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/atm","root","");
//            Statement statement = connection.createStatement();
            System.out.println("Connected");
        }catch(ClassNotFoundException | SQLException ex){

            ex.printStackTrace();
        }
        return connection;
    }    
    public void computeMd5()
    {
        try {
                MessageDigest md = MessageDigest.getInstance("MD5");
                byte[] messageDigest = md.digest(this.text.getBytes());
                BigInteger n = new BigInteger(1, messageDigest);
                String hashText = n.toString(16);
                while (hashText.length() < 32) {
                        hashText = "0" + hashText;
                }
                this.hashText = hashText;
        }
        catch (NoSuchAlgorithmException e) {
                throw new RuntimeException(e);
        }
    }

	public static void main(String args[]) throws NoSuchAlgorithmException
	{

		String s = "1111222233334444";
                MD5Hashing md = new MD5Hashing(s);
                md.computeMd5();
                System.out.println("Your HashCode Generated by MD5 is: " + md.getHashText());
                MD5Hashing m =new MD5Hashing(s);
                Connection con = m.databaseCon();
//        String query = "select card_num, pin, cardHash, pinHash from card_pin_hash";
//        try{
//            Statement st = con.createStatement();
//            ResultSet rs = st.executeQuery(query);
//            while(rs.next()){
//                
////           
//            String cardNum = rs.getString("card_num");
//            String pin = rs.getString("pin");
//            String cardHash = rs.getString("cardHash");
//            String pinHash = rs.getString("pinHash");
////            String concat = cardNum.concat(pin);
//            
////            byte[] encryptionBytes = ecd.encryptF(cardNum, ecd.getSymKey(), ecd.getC());
////            System.out.println("Card_num->"+cardNum);
////            System.out.println("Ency -> " +getMd5(concat));
////            System.out.println("Decrypted: " + 
////            String cardHash = Arrays.toString(encryptionBytes);
//            
//            
//////            byte[] encryptionBytesPin = ecd.encryptF(pin, ecd.getSymKey(), ecd.getC());
////            System.out.println("Pin->"+pin);
////            System.out.println("Ency -> " + encryptionBytesPin);
////            System.out.println("Decrypted: " + decryptF(encryptionBytesPin, ecd.getSymKey(), ecd.getC()));
//            
////            String pinHash = Arrays.toString(encryptionBytesPin);
////            String pinHash = rs.getString("pinHash");
//            String insertQuery = "update debit_card set card_no=?, pin = ? where card_no = ?";
//            PreparedStatement pst = con.prepareStatement(insertQuery);
//            pst.setString(1,cardHash );
////            pst.setString(2, pinHash);
//            pst.setString(2, pinHash);
//            pst.setString(3, cardNum);
//            pst.executeUpdate();
//            }
//            con.close();
//            System.out.println("Updated");
//            
//        }catch(Exception ex){
//            ex.printStackTrace();
//        }
	}
}
